name: CLI - Publish to TestPyPI

on:
  # Manual trigger
  workflow_dispatch:
  
  # Trigger on pushes to main (any backend changes)
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
      - 'pyproject.toml'
      - 'MANIFEST.in'
      - '.github/workflows/cli-testpypi.yml'
  
  # Trigger on releases
  release:
    types: [published]

jobs:
  publish-cli:
    name: Build and Publish CLI to TestPyPI
    runs-on: ubuntu-latest
    
    # Removed environment and trusted publishing for now
    # You can re-enable after setting up trusted publisher on TestPyPI
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Build package
      run: |
        pip install build twine
        python -m build
        twine check dist/*
    
    - name: Test package locally
      run: |
        pip install dist/*.whl
        multi-vuln-scanner --help
        dep-scan --help
        echo "✅ CLI package works locally"
    
    - name: Publish to TestPyPI
      if: ${{ secrets.TESTPYPI_API_TOKEN }}
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        username: __token__
        password: ${{ secrets.TESTPYPI_API_TOKEN }}
        print-hash: true
    
    - name: Skip publishing (no credentials)
      if: ${{ !secrets.TESTPYPI_API_TOKEN }}
      run: |
        echo "⚠️ Skipping TestPyPI publishing - no TESTPYPI_API_TOKEN secret configured"
        echo "Package built successfully and is ready for publishing"
        echo "To publish, add your TestPyPI API token as a repository secret"
    
    - name: Verify TestPyPI installation
      if: ${{ secrets.TESTPYPI_API_TOKEN }}
      run: |
        sleep 30  # Wait for TestPyPI
        pip uninstall -y multi-vuln-scanner
        pip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple/ multi-vuln-scanner
        multi-vuln-scanner --help
        echo "✅ TestPyPI installation successful"