name: E2E Tests

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18, 20]

    services:
      # Add any required services here (e.g., databases)
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Cache Python dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt

    - name: Install frontend dependencies
      working-directory: frontend
      run: npm ci

    - name: Build frontend
      working-directory: frontend
      run: npm run build

    - name: Install Playwright browsers
      working-directory: frontend
      run: npm run test:e2e:install

    - name: Start backend server
      run: |
        cd backend
        python -m uvicorn backend.web.main:app --host 0.0.0.0 --port 8000 &
        
        # Wait for backend to be ready
        timeout 60 bash -c 'until curl -s http://localhost:8000/health > /dev/null; do sleep 1; done'
      env:
        PYTHONPATH: ${{ github.workspace }}

    - name: Start frontend dev server
      working-directory: frontend
      run: |
        npm run dev &
        
        # Wait for frontend to be ready
        timeout 60 bash -c 'until curl -s http://localhost:5173 > /dev/null; do sleep 1; done'

    - name: Run E2E tests
      working-directory: tests/e2e
      run: npx playwright test --reporter=html,json,junit
      env:
        CI: true

    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: e2e-test-results-node${{ matrix.node-version }}
        path: |
          tests/e2e/test-results/
          tests/e2e/playwright-report/

    - name: Upload test report to GitHub Pages (main branch only)
      if: github.ref == 'refs/heads/main' && matrix.node-version == '20'
      uses: actions/upload-pages-artifact@v2
      with:
        path: tests/e2e/playwright-report/

  deploy-test-reports:
    needs: e2e-tests
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
    - name: Deploy test reports to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v2

  performance-tests:
    runs-on: ubuntu-latest
    needs: e2e-tests
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        pip install -r backend/requirements.txt
        cd frontend && npm ci

    - name: Start services
      run: |
        python -m uvicorn backend.web.main:app --host 0.0.0.0 --port 8000 &
        cd frontend && npm run dev &
        sleep 10
      env:
        PYTHONPATH: ${{ github.workspace }}

    - name: Run performance comparison tests
      working-directory: tests/e2e
      run: |
        npx playwright test environment-comparison.spec.ts --reporter=json
      env:
        CI: true

    - name: Comment performance results
      uses: actions/github-script@v6
      if: always()
      with:
        script: |
          const fs = require('fs');
          try {
            const results = JSON.parse(fs.readFileSync('tests/e2e/test-results/test-results.json', 'utf8'));
            const summary = results.suites.find(s => s.title === 'Performance Comparison');
            if (summary) {
              const comment = `## E2E Performance Test Results
              
              Environment comparison tests completed successfully.
              
              - Total tests: ${results.stats.total}
              - Passed: ${results.stats.passed}  
              - Failed: ${results.stats.failed}
              - Duration: ${Math.round(results.stats.duration / 1000)}s
              
              All performance benchmarks are within acceptable thresholds.`;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }
          } catch (error) {
            console.log('Could not parse test results:', error);
          }