# Development Dockerfile for DepScan Backend
FROM python:3.12-slim

# Set development environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    PYTHONPATH=/app/backend \
    ENV=development \
    DEBUG=true

# Install system dependencies including development tools
RUN apt-get update && apt-get install -y --no-install-recommends \
    gcc \
    libc6-dev \
    curl \
    git \
    vim \
    tree \
    htop \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Create app user
RUN groupadd -r app && useradd -r -g app app

# Create application directories
RUN mkdir -p /app/backend /app/data /app/logs
WORKDIR /app

# Copy Python requirements and install dependencies
COPY backend/requirements.txt backend/
RUN pip install -r backend/requirements.txt

# Install additional development dependencies
RUN pip install \
    watchdog \
    debugpy \
    ipdb \
    pytest-xvfb \
    pytest-cov

# Copy backend code (this will be overridden by volume in docker-compose.dev.yml)
COPY backend/ backend/

# Set proper permissions and create cache directory
RUN chown -R app:app /app && \
    chmod -R 755 /app && \
    mkdir -p /home/app/.cache/pip && \
    chown -R app:app /home/app

# Switch to non-root user
USER app

# Expose port and debugger port
EXPOSE 8000 5678

# Health check for development
HEALTHCHECK --interval=30s --timeout=10s --start-period=15s --retries=3 \
  CMD curl -f http://localhost:8000/health || exit 1

# Development command with auto-reload
CMD ["python", "-m", "uvicorn", "backend.web.main:app", \
     "--host", "0.0.0.0", \
     "--port", "8000", \
     "--reload", \
     "--reload-dir", "/app/backend", \
     "--log-level", "debug"]