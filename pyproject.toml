[build-system]
requires = ["setuptools>=70.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "dep-scan"
version = "1.0.0"
description = "Professional-grade dependency vulnerability scanner with CLI and web interfaces"
readme = {text = "Simple dependency vulnerability scanner", content-type = "text/plain"}
license = {text = "MIT"}
authors = [
    {name = "DepScan Team", email = "depscan@example.com"},
]
maintainers = [
    {name = "DepScan Team", email = "depscan@example.com"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators", 
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11", 
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Security",
    "Topic :: Software Development :: Quality Assurance",
    "Topic :: System :: Systems Administration",
]
keywords = [
    "security", 
    "vulnerability", 
    "dependency", 
    "scanner", 
    "osv", 
    "cve",
    "npm",
    "python",
    "audit",
]
requires-python = ">=3.10"
dependencies = [
    "fastapi>=0.115.6",
    "uvicorn[standard]>=0.34.0",
    "httpx>=0.28.1",
    "pydantic>=2.11.0",  # SECURITY: Fixed CVE-2024-3772
    "pydantic-settings>=2.0.0",
    "typer[all]>=0.15.1",
    "rich>=14.1.0",
    "pipdeptree>=2.23.4",
    "packaging>=24.2",
    "tomli>=2.1.0",
    "pyyaml>=6.0.2",
    "aiosqlite>=0.20.0",
    "python-multipart>=0.0.20",
    "websockets>=14.1",
    "pip-audit>=2.7.0",  # Security scanning - supports latest Pydantic
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.4",
    "pytest-asyncio>=0.24.0",
    "pytest-httpx>=0.21.3",
    "black>=24.8.0",
    "isort>=5.13.0",
    "flake8>=7.1.0",
    "mypy>=1.13.0",
    "bandit>=1.7.10",  # Security linter
    "pre-commit>=4.0.0",
]

[project.scripts]
dep-scan = "backend.cli.main:app"

[project.urls]
Homepage = "https://github.com/therickybobbeh/dep-scanner"
Documentation = "https://github.com/therickybobbeh/dep-scanner/tree/main/docs"
Repository = "https://github.com/therickybobbeh/dep-scanner.git"
Issues = "https://github.com/therickybobbeh/dep-scanner/issues"
Changelog = "https://github.com/therickybobbeh/dep-scanner/releases"

[tool.setuptools]
py-modules = ["backend.cli.main"]

[tool.setuptools.packages.find]
where = ["."]
include = ["backend*"]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["backend"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "pipdeptree.*",
    "aiosqlite.*",
    "uvicorn.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["backend/tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--strict-markers --strict-config --verbose"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["backend"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]

[tool.bandit]
exclude_dirs = ["tests", "frontend"]
skips = ["B101", "B601"]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503", "E501"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    "*.egg-info",
    ".venv",
    ".mypy_cache",
    ".pytest_cache",
    "frontend"
]

[tool.ruff]
line-length = 88
target-version = "py310"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings  
    "F",  # pyflakes
    "UP", # pyupgrade
    "C4", # flake8-comprehensions
    "B",  # flake8-bugbear
    "SIM", # flake8-simplify
    "I",  # isort
]
ignore = [
    "E501", # line too long (handled by black)
    "B904", # raise-without-from-inside-except
]
exclude = [
    ".git",
    "__pycache__", 
    "build",
    "dist",
    ".eggs",
    "*.egg-info",
    ".venv",
    ".mypy_cache",
    ".pytest_cache",
    "frontend"
]

[tool.ruff.per-file-ignores]
"backend/tests/*" = ["F401", "F811"]  # Allow unused imports in tests