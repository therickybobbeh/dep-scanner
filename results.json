{
  "scan_info": {
    "total_dependencies": 15,
    "vulnerable_packages": 26,
    "ecosystems": [
      "PyPI"
    ]
  },
  "vulnerabilities": [
    {
      "package": "flask",
      "version": "2.0.1",
      "vulnerability_id": "GHSA-m2qf-hxjv-5gpq",
      "severity": "HIGH",
      "summary": "Flask vulnerable to possible disclosure of permanent session cookie due to missing Vary: Cookie header",
      "cve_ids": [
        "CVE-2023-30861"
      ],
      "advisory_url": "https://nvd.nist.gov/vuln/detail/CVE-2023-30861",
      "type": "direct",
      "immediate_parent": null,
      "dependency_path": [
        "flask"
      ],
      "cvss_score": 7.5,
      "fixed_range": ">=2.3.2",
      "details": "When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by a proxy to other clients. If the proxy also caches `Set-Cookie` headers, it may send one client's `session` cookie to other clients. The severity depends on the application's use of the session, and the proxy's behavior regarding cookies. The risk depends on _all_ these conditions being met.\n\n1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.\n2. The application sets [`session.permanent = True`](https://flask.palletsprojects.com/en/2.3.x/api/#flask.session.permanent).\n2. The application does not access or modify the session at any point during a request.\n4. [`SESSION_REFRESH_EACH_REQUEST`](https://flask.palletsprojects.com/en/2.3.x/config/#SESSION_REFRESH_EACH_REQUEST) is enabled (the default).\n5. The application does not set a `Cache-Control` header to indicate that a page is private or should not be cached.\n\nThis happens because vulnerable versions of Flask only set the `Vary: Cookie` header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified.",
      "published": "2023-05-01T19:22:20+00:00",
      "modified": "2025-02-21T05:42:17.337040+00:00"
    },
    {
      "package": "flask",
      "version": "2.0.1",
      "vulnerability_id": "PYSEC-2023-62",
      "severity": "UNKNOWN",
      "summary": "",
      "cve_ids": [
        "CVE-2023-30861"
      ],
      "advisory_url": "https://github.com/pallets/flask/security/advisories/GHSA-m2qf-hxjv-5gpq",
      "type": "direct",
      "immediate_parent": null,
      "dependency_path": [
        "flask"
      ],
      "cvss_score": null,
      "fixed_range": ">=70f906c51ce49c485f1d355703e9cc3386b1cc2b",
      "details": "Flask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches `Set-Cookie` headers, it may send one client's `session` cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.\n\n1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.\n2. The application sets `session.permanent = True`\n3. The application does not access or modify the session at any point during a request.\n4. `SESSION_REFRESH_EACH_REQUEST` enabled (the default).\n5. The application does not set a `Cache-Control` header to indicate that a page is private or should not be cached.\n\nThis happens because vulnerable versions of Flask only set the `Vary: Cookie` header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5.",
      "published": "2023-05-02T18:15:00+00:00",
      "modified": "2023-11-08T04:12:28.231927+00:00"
    },
    {
      "package": "numpy",
      "version": "1.21.0",
      "vulnerability_id": "GHSA-fpfv-jqm9-f5jm",
      "severity": "MEDIUM",
      "summary": "Incorrect Comparison in NumPy",
      "cve_ids": [
        "CVE-2021-34141"
      ],
      "advisory_url": "https://nvd.nist.gov/vuln/detail/CVE-2021-34141",
      "type": "direct",
      "immediate_parent": null,
      "dependency_path": [
        "numpy"
      ],
      "cvss_score": 5.3,
      "fixed_range": ">=1.22",
      "details": "Incomplete string comparison in the numpy.core component in NumPy1.9.x, which allows attackers to fail the APIs via constructing specific string objects.",
      "published": "2021-12-18T00:00:41+00:00",
      "modified": "2023-11-08T04:06:07.388275+00:00"
    },
    {
      "package": "pillow",
      "version": "8.3.1",
      "vulnerability_id": "GHSA-3f63-hfp8-52jq",
      "severity": "HIGH",
      "summary": "Arbitrary Code Execution in Pillow",
      "cve_ids": [
        "CVE-2023-50447"
      ],
      "advisory_url": "https://nvd.nist.gov/vuln/detail/CVE-2023-50447",
      "type": "direct",
      "immediate_parent": null,
      "dependency_path": [
        "pillow"
      ],
      "cvss_score": 8.1,
      "fixed_range": ">=10.2.0",
      "details": "Pillow through 10.1.0 allows PIL.ImageMath.eval Arbitrary Code Execution via the environment parameter, a different vulnerability than CVE-2022-22817 (which was about the expression parameter).",
      "published": "2024-01-19T21:30:35+00:00",
      "modified": "2025-02-13T05:40:44.483586+00:00"
    },
    {
      "package": "pillow",
      "version": "8.3.1",
      "vulnerability_id": "GHSA-44wm-f244-xhp3",
      "severity": "MEDIUM",
      "summary": "Pillow buffer overflow vulnerability",
      "cve_ids": [
        "CVE-2024-28219"
      ],
      "advisory_url": "https://nvd.nist.gov/vuln/detail/CVE-2024-28219",
      "type": "direct",
      "immediate_parent": null,
      "dependency_path": [
        "pillow"
      ],
      "cvss_score": 6.6,
      "fixed_range": ">=10.3.0",
      "details": "In _imagingcms.c in Pillow before 10.3.0, a buffer overflow exists because strcpy is used instead of strncpy.",
      "published": "2024-04-03T03:30:30+00:00",
      "modified": "2024-11-21T05:23:57.682143+00:00"
    },
    {
      "package": "pillow",
      "version": "8.3.1",
      "vulnerability_id": "GHSA-4fx9-vc88-q2xc",
      "severity": "LOW",
      "summary": "Infinite loop in Pillow",
      "cve_ids": [],
      "advisory_url": "https://github.com/python-pillow/Pillow/commit/baae9ec4b67c68e3adaf1208cf54e8de5e38a6fd",
      "type": "direct",
      "immediate_parent": null,
      "dependency_path": [
        "pillow"
      ],
      "cvss_score": 3.0,
      "fixed_range": ">=9.0.0",
      "details": "JpegImagePlugin may append an EOF marker to the end of a truncated file, so that the last segment of the data will still be processed by the decoder.\n\nIf the EOF marker is not detected as such however, this could lead to an infinite loop where JpegImagePlugin keeps trying to end the file.",
      "published": "2022-03-11T23:39:27+00:00",
      "modified": "2024-12-05T05:35:12.297192+00:00"
    },
    {
      "package": "pillow",
      "version": "8.3.1",
      "vulnerability_id": "GHSA-8ghj-p4vj-mr35",
      "severity": "HIGH",
      "summary": "Pillow Denial of Service vulnerability",
      "cve_ids": [
        "CVE-2023-44271"
      ],
      "advisory_url": "https://nvd.nist.gov/vuln/detail/CVE-2023-44271",
      "type": "direct",
      "immediate_parent": null,
      "dependency_path": [
        "pillow"
      ],
      "cvss_score": 7.5,
      "fixed_range": ">=10.0.0",
      "details": "An issue was discovered in Pillow before 10.0.0. It is a Denial of Service that uncontrollably allocates memory to process a given task, potentially causing a service to crash by having it run out of memory. This occurs for truetype in ImageFont when textlength in an ImageDraw instance operates on a long text argument.",
      "published": "2023-11-03T06:36:30+00:00",
      "modified": "2024-10-14T21:23:45.339098+00:00"
    },
    {
      "package": "pillow",
      "version": "8.3.1",
      "vulnerability_id": "GHSA-8vj2-vxx3-667w",
      "severity": "CRITICAL",
      "summary": "Arbitrary expression injection in Pillow",
      "cve_ids": [
        "CVE-2022-22817"
      ],
      "advisory_url": "https://nvd.nist.gov/vuln/detail/CVE-2022-22817",
      "type": "direct",
      "immediate_parent": null,
      "dependency_path": [
        "pillow"
      ],
      "cvss_score": 9.8,
      "fixed_range": ">=9.0.1",
      "details": "`PIL.ImageMath.eval` in Pillow before 9.0.0 allows evaluation of arbitrary expressions, such as ones that use the Python exec method `ImageMath.eval(\"exec(exit())\")`.\n\nWhile Pillow 9.0.0 restricted top-level builtins available to PIL.ImageMath.eval(), it did not prevent builtins available to lambda expressions. These are now also restricted in 9.0.1.",
      "published": "2022-01-12T20:07:33+00:00",
      "modified": "2024-10-14T18:26:08.636369+00:00"
    },
    {
      "package": "pillow",
      "version": "8.3.1",
      "vulnerability_id": "GHSA-98vv-pw6r-q6q4",
      "severity": "HIGH",
      "summary": "Uncontrolled Resource Consumption in pillow",
      "cve_ids": [
        "CVE-2021-23437"
      ],
      "advisory_url": "https://nvd.nist.gov/vuln/detail/CVE-2021-23437",
      "type": "direct",
      "immediate_parent": null,
      "dependency_path": [
        "pillow"
      ],
      "cvss_score": 7.5,
      "fixed_range": ">=8.3.2",
      "details": "The package pillow 5.2.0 and before 8.3.2 are vulnerable to Regular Expression Denial of Service (ReDoS) via the getrgb function.",
      "published": "2021-09-07T23:08:10+00:00",
      "modified": "2024-10-09T21:08:55.452380+00:00"
    },
    {
      "package": "pillow",
      "version": "8.3.1",
      "vulnerability_id": "GHSA-9j59-75qj-795w",
      "severity": "CRITICAL",
      "summary": "Path traversal in Pillow",
      "cve_ids": [
        "CVE-2022-24303"
      ],
      "advisory_url": "https://nvd.nist.gov/vuln/detail/CVE-2022-24303",
      "type": "direct",
      "immediate_parent": null,
      "dependency_path": [
        "pillow"
      ],
      "cvss_score": 9.1,
      "fixed_range": ">=9.0.1",
      "details": "Pillow before 9.0.1 allows attackers to delete files because spaces in temporary pathnames are mishandled.",
      "published": "2022-03-11T23:10:32+00:00",
      "modified": "2024-10-14T18:43:28.549080+00:00"
    },
    {
      "package": "pillow",
      "version": "8.3.1",
      "vulnerability_id": "GHSA-j7hp-h8jx-5ppr",
      "severity": "HIGH",
      "summary": "libwebp: OOB write in BuildHuffmanTable",
      "cve_ids": [
        "CVE-2023-4863",
        "CVE-2023-5129"
      ],
      "advisory_url": "https://nvd.nist.gov/vuln/detail/CVE-2023-4863",
      "type": "direct",
      "immediate_parent": null,
      "dependency_path": [
        "pillow"
      ],
      "cvss_score": 8.7,
      "fixed_range": ">=10.0.1",
      "details": "Heap buffer overflow in libwebp allow a remote attacker to perform an out of bounds memory write via a crafted HTML page.",
      "published": "2023-09-12T15:30:20+00:00",
      "modified": "2025-07-09T16:28:48.316502+00:00"
    },
    {
      "package": "pillow",
      "version": "8.3.1",
      "vulnerability_id": "GHSA-m2vv-5vj5-2hm7",
      "severity": "HIGH",
      "summary": "Pillow vulnerable to Data Amplification attack.",
      "cve_ids": [
        "CVE-2022-45198"
      ],
      "advisory_url": "https://nvd.nist.gov/vuln/detail/CVE-2022-45198",
      "type": "direct",
      "immediate_parent": null,
      "dependency_path": [
        "pillow"
      ],
      "cvss_score": 7.5,
      "fixed_range": ">=9.2.0",
      "details": "Pillow before 9.2.0 performs Improper Handling of Highly Compressed GIF Data (Data Amplification).",
      "published": "2022-11-14T12:00:15+00:00",
      "modified": "2024-10-14T18:39:06.000592+00:00"
    },
    {
      "package": "pillow",
      "version": "8.3.1",
      "vulnerability_id": "GHSA-pw3c-h7wp-cvhx",
      "severity": "MEDIUM",
      "summary": "Improper Initialization in Pillow",
      "cve_ids": [
        "CVE-2022-22815"
      ],
      "advisory_url": "https://nvd.nist.gov/vuln/detail/CVE-2022-22815",
      "type": "direct",
      "immediate_parent": null,
      "dependency_path": [
        "pillow"
      ],
      "cvss_score": 6.4,
      "fixed_range": ">=9.0.0",
      "details": "Pillow is the friendly PIL (Python Imaging Library) fork. `path_getbbox` in `path.c` in Pillow before 9.0.0 improperly initializes `ImagePath.Path`.",
      "published": "2022-01-12T20:07:43+00:00",
      "modified": "2024-10-14T18:38:03.414350+00:00"
    },
    {
      "package": "pillow",
      "version": "8.3.1",
      "vulnerability_id": "GHSA-xrcv-f9gm-v42c",
      "severity": "MEDIUM",
      "summary": "Out-of-bounds Read in Pillow",
      "cve_ids": [
        "CVE-2022-22816"
      ],
      "advisory_url": "https://nvd.nist.gov/vuln/detail/CVE-2022-22816",
      "type": "direct",
      "immediate_parent": null,
      "dependency_path": [
        "pillow"
      ],
      "cvss_score": 6.4,
      "fixed_range": ">=9.0.0",
      "details": "path_getbbox in path.c in Pillow before 9.0.0 has a buffer over-read during initialization of ImagePath.Path.",
      "published": "2022-01-12T20:07:41+00:00",
      "modified": "2024-10-14T18:38:42.596412+00:00"
    },
    {
      "package": "pillow",
      "version": "8.3.1",
      "vulnerability_id": "PYSEC-2021-317",
      "severity": "UNKNOWN",
      "summary": "",
      "cve_ids": [
        "CVE-2021-23437"
      ],
      "advisory_url": "https://snyk.io/vuln/SNYK-PYTHON-PILLOW-1319443",
      "type": "direct",
      "immediate_parent": null,
      "dependency_path": [
        "pillow"
      ],
      "cvss_score": null,
      "fixed_range": ">=9e08eb8f78fdfd2f476e1b20b7cf38683754866b",
      "details": "The package pillow from 0 and before 8.3.2 are vulnerable to Regular Expression Denial of Service (ReDoS) via the getrgb function.",
      "published": "2021-09-03T16:15:00+00:00",
      "modified": "2023-12-06T01:00:56.992827+00:00"
    },
    {
      "package": "pillow",
      "version": "8.3.1",
      "vulnerability_id": "PYSEC-2022-10",
      "severity": "UNKNOWN",
      "summary": "",
      "cve_ids": [
        "CVE-2022-22817"
      ],
      "advisory_url": "https://github.com/advisories/GHSA-8vj2-vxx3-667w",
      "type": "direct",
      "immediate_parent": null,
      "dependency_path": [
        "pillow"
      ],
      "cvss_score": null,
      "fixed_range": ">=9.0.0",
      "details": "PIL.ImageMath.eval in Pillow before 9.0.0 allows evaluation of arbitrary expressions, such as ones that use the Python exec method.",
      "published": "2022-01-10T14:12:00+00:00",
      "modified": "2023-12-06T01:01:58.166055+00:00"
    },
    {
      "package": "pillow",
      "version": "8.3.1",
      "vulnerability_id": "PYSEC-2022-168",
      "severity": "UNKNOWN",
      "summary": "",
      "cve_ids": [
        "CVE-2022-24303"
      ],
      "advisory_url": "https://github.com/advisories/GHSA-9j59-75qj-795w",
      "type": "direct",
      "immediate_parent": null,
      "dependency_path": [
        "pillow"
      ],
      "cvss_score": null,
      "fixed_range": ">=9.0.1",
      "details": "Pillow before 9.0.1 allows attackers to delete files because spaces in temporary pathnames are mishandled.",
      "published": "2022-03-28T02:15:00+00:00",
      "modified": "2023-12-06T01:02:03.848876+00:00"
    },
    {
      "package": "pillow",
      "version": "8.3.1",
      "vulnerability_id": "PYSEC-2022-42979",
      "severity": "UNKNOWN",
      "summary": "",
      "cve_ids": [
        "CVE-2022-45198"
      ],
      "advisory_url": "https://bugs.gentoo.org/855683",
      "type": "direct",
      "immediate_parent": null,
      "dependency_path": [
        "pillow"
      ],
      "cvss_score": null,
      "fixed_range": ">=11918eac0628ec8ac0812670d9838361ead2d6a4",
      "details": "Pillow before 9.2.0 performs Improper Handling of Highly Compressed GIF Data (Data Amplification).",
      "published": "2022-11-14T07:15:00+00:00",
      "modified": "2023-12-06T01:02:42.586226+00:00"
    },
    {
      "package": "pillow",
      "version": "8.3.1",
      "vulnerability_id": "PYSEC-2022-8",
      "severity": "UNKNOWN",
      "summary": "",
      "cve_ids": [
        "CVE-2022-22815"
      ],
      "advisory_url": "https://github.com/advisories/GHSA-pw3c-h7wp-cvhx",
      "type": "direct",
      "immediate_parent": null,
      "dependency_path": [
        "pillow"
      ],
      "cvss_score": null,
      "fixed_range": ">=9.0.0",
      "details": "path_getbbox in path.c in Pillow before 9.0.0 improperly initializes ImagePath.Path.",
      "published": "2022-01-10T14:12:00+00:00",
      "modified": "2023-12-06T01:01:58.043772+00:00"
    },
    {
      "package": "pillow",
      "version": "8.3.1",
      "vulnerability_id": "PYSEC-2022-9",
      "severity": "UNKNOWN",
      "summary": "",
      "cve_ids": [
        "CVE-2022-22816"
      ],
      "advisory_url": "https://github.com/advisories/GHSA-xrcv-f9gm-v42c",
      "type": "direct",
      "immediate_parent": null,
      "dependency_path": [
        "pillow"
      ],
      "cvss_score": null,
      "fixed_range": ">=9.0.0",
      "details": "path_getbbox in path.c in Pillow before 9.0.0 has a buffer over-read during initialization of ImagePath.Path.",
      "published": "2022-01-10T14:12:00+00:00",
      "modified": "2023-12-06T01:01:58.105368+00:00"
    },
    {
      "package": "pillow",
      "version": "8.3.1",
      "vulnerability_id": "PYSEC-2023-175",
      "severity": "UNKNOWN",
      "summary": "",
      "cve_ids": [],
      "advisory_url": "https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst#1001-2023-09-15",
      "type": "direct",
      "immediate_parent": null,
      "dependency_path": [
        "pillow"
      ],
      "cvss_score": null,
      "fixed_range": ">=10.0.1",
      "details": "Pillow versions before v10.0.1 bundled libwebp binaries in wheels that are vulnerable to CVE-2023-5129 (previously CVE-2023-4863). Pillow v10.0.1 upgrades the bundled libwebp binary to v1.3.2.",
      "published": "2023-09-20T05:46:53.608652+00:00",
      "modified": "2023-09-25T17:25:13.946374+00:00"
    },
    {
      "package": "pillow",
      "version": "8.3.1",
      "vulnerability_id": "PYSEC-2023-227",
      "severity": "UNKNOWN",
      "summary": "",
      "cve_ids": [
        "CVE-2023-44271"
      ],
      "advisory_url": "https://devhub.checkmarx.com/cve-details/CVE-2023-44271/",
      "type": "direct",
      "immediate_parent": null,
      "dependency_path": [
        "pillow"
      ],
      "cvss_score": null,
      "fixed_range": ">=1fe1bb49c452b0318cad12ea9d97c3bef188e9a7",
      "details": "An issue was discovered in Pillow before 10.0.0. It is a Denial of Service that uncontrollably allocates memory to process a given task, potentially causing a service to crash by having it run out of memory. This occurs for truetype in ImageFont when textlength in an ImageDraw instance operates on a long text argument.",
      "published": "2023-11-03T05:15:00+00:00",
      "modified": "2023-11-10T08:11:29.510057+00:00"
    },
    {
      "package": "requests",
      "version": "2.25.1",
      "vulnerability_id": "GHSA-9hjg-9r4m-mvj7",
      "severity": "MEDIUM",
      "summary": "Requests vulnerable to .netrc credentials leak via malicious URLs",
      "cve_ids": [
        "CVE-2024-47081"
      ],
      "advisory_url": "https://nvd.nist.gov/vuln/detail/CVE-2024-47081",
      "type": "direct",
      "immediate_parent": null,
      "dependency_path": [
        "requests"
      ],
      "cvss_score": 5.2,
      "fixed_range": ">=2.32.4",
      "details": "### Impact\n\nDue to a URL parsing issue, Requests releases prior to 2.32.4 may leak .netrc credentials to third parties for specific maliciously-crafted URLs.\n\n### Workarounds\nFor older versions of Requests, use of the .netrc file can be disabled with `trust_env=False` on your Requests Session ([docs](https://requests.readthedocs.io/en/latest/api/#requests.Session.trust_env)).\n\n### References\nhttps://github.com/psf/requests/pull/6965\nhttps://seclists.org/fulldisclosure/2025/Jun/2",
      "published": "2025-06-09T19:06:08+00:00",
      "modified": "2025-06-09T19:27:13.389930+00:00"
    },
    {
      "package": "requests",
      "version": "2.25.1",
      "vulnerability_id": "GHSA-9wx4-h78v-vm56",
      "severity": "MEDIUM",
      "summary": "Requests `Session` object does not verify requests after making first request with verify=False",
      "cve_ids": [
        "CVE-2024-35195"
      ],
      "advisory_url": "https://nvd.nist.gov/vuln/detail/CVE-2024-35195",
      "type": "direct",
      "immediate_parent": null,
      "dependency_path": [
        "requests"
      ],
      "cvss_score": 5.5,
      "fixed_range": ">=2.32.0",
      "details": "When making requests through a Requests `Session`, if the first request is made with `verify=False` to disable cert verification, all subsequent requests to the same origin will continue to ignore cert verification regardless of changes to the value of `verify`. This behavior will continue for the lifecycle of the connection in the connection pool.\n\n### Remediation\nAny of these options can be used to remediate the current issue, we highly recommend upgrading as the preferred mitigation.\n\n* Upgrade to `requests>=2.32.0`.\n* For `requests<2.32.0`, avoid setting `verify=False` for the first request to a host while using a Requests Session.\n* For `requests<2.32.0`, call `close()` on `Session` objects to clear existing connections if `verify=False` is used.\n\n### Related Links\n* https://github.com/psf/requests/pull/6655",
      "published": "2024-05-20T20:15:00+00:00",
      "modified": "2024-07-15T22:12:27.987373+00:00"
    },
    {
      "package": "requests",
      "version": "2.25.1",
      "vulnerability_id": "GHSA-j8r2-6x86-q33q",
      "severity": "MEDIUM",
      "summary": "Unintended leak of Proxy-Authorization header in requests",
      "cve_ids": [
        "CVE-2023-32681"
      ],
      "advisory_url": "https://nvd.nist.gov/vuln/detail/CVE-2023-32681",
      "type": "direct",
      "immediate_parent": null,
      "dependency_path": [
        "requests"
      ],
      "cvss_score": 5.6,
      "fixed_range": ">=2.31.0",
      "details": "### Impact\n\nSince Requests v2.3.0, Requests has been vulnerable to potentially leaking `Proxy-Authorization` headers to destination servers, specifically during redirects to an HTTPS origin. This is a product of how `rebuild_proxies` is used to recompute and [reattach the `Proxy-Authorization` header](https://github.com/psf/requests/blob/f2629e9e3c7ce3c3c8c025bcd8db551101cbc773/requests/sessions.py#L319-L328) to requests when redirected. Note this behavior has _only_ been observed to affect proxied requests when credentials are supplied in the URL user information component (e.g. `https://username:password@proxy:8080`).\n\n**Current vulnerable behavior(s):**\n\n1. HTTP \u2192 HTTPS: **leak**\n2. HTTPS \u2192 HTTP: **no leak**\n3. HTTPS \u2192 HTTPS: **leak**\n4. HTTP \u2192 HTTP: **no leak**\n\nFor HTTP connections sent through the proxy, the proxy will identify the header in the request itself and remove it prior to forwarding to the destination server. However when sent over HTTPS, the `Proxy-Authorization` header must be sent in the CONNECT request as the proxy has no visibility into further tunneled requests. This results in Requests forwarding the header to the destination server unintentionally, allowing a malicious actor to potentially exfiltrate those credentials.\n\nThe reason this currently works for HTTPS connections in Requests is the `Proxy-Authorization` header is also handled by urllib3 with our usage of the ProxyManager in adapters.py with [`proxy_manager_for`](https://github.com/psf/requests/blob/f2629e9e3c7ce3c3c8c025bcd8db551101cbc773/requests/adapters.py#L199-L235). This will compute the required proxy headers in `proxy_headers` and pass them to the Proxy Manager, avoiding attaching them directly to the Request object. This will be our preferred option going forward for default usage.\n\n### Patches\nStarting in Requests v2.31.0, Requests will no longer attach this header to redirects with an HTTPS destination. This should have no negative impacts on the default behavior of the library as the proxy credentials are already properly being handled by urllib3's ProxyManager.\n\nFor users with custom adapters, this _may_ be potentially breaking if you were already working around this behavior. The previous functionality of `rebuild_proxies` doesn't make sense in any case, so we would encourage any users impacted to migrate any handling of Proxy-Authorization directly into their custom adapter.\n\n### Workarounds\nFor users who are not able to update Requests immediately, there is one potential workaround.\n\nYou may disable redirects by setting `allow_redirects` to `False` on all calls through Requests top-level APIs. Note that if you're currently relying on redirect behaviors, you will need to capture the 3xx response codes and ensure a new request is made to the redirect destination.\n```\nimport requests\nr = requests.get('http://github.com/', allow_redirects=False)\n```\n\n### Credits\n\nThis vulnerability was discovered and disclosed by the following individuals.\n\nDennis Brinkrolf, Haxolot (https://haxolot.com/)\nTobias Funke, (tobiasfunke93@gmail.com)",
      "published": "2023-05-22T20:36:32+00:00",
      "modified": "2025-02-13T19:20:45.182158+00:00"
    },
    {
      "package": "requests",
      "version": "2.25.1",
      "vulnerability_id": "PYSEC-2023-74",
      "severity": "UNKNOWN",
      "summary": "",
      "cve_ids": [
        "CVE-2023-32681"
      ],
      "advisory_url": "https://github.com/psf/requests/security/advisories/GHSA-j8r2-6x86-q33q",
      "type": "direct",
      "immediate_parent": null,
      "dependency_path": [
        "requests"
      ],
      "cvss_score": null,
      "fixed_range": ">=74ea7cf7a6a27a4eeb2ae24e162bcc942a6706d5",
      "details": "Requests is a HTTP library. Since Requests 2.3.0, Requests has been leaking Proxy-Authorization headers to destination servers when redirected to an HTTPS endpoint. This is a product of how we use `rebuild_proxies` to reattach the `Proxy-Authorization` header to requests. For HTTP connections sent through the tunnel, the proxy will identify the header in the request itself and remove it prior to forwarding to the destination server. However when sent over HTTPS, the `Proxy-Authorization` header must be sent in the CONNECT request as the proxy has no visibility into the tunneled request. This results in Requests forwarding proxy credentials to the destination server unintentionally, allowing a malicious actor to potentially exfiltrate sensitive information. This issue has been patched in version 2.31.0.\n\n",
      "published": "2023-05-26T18:15:00+00:00",
      "modified": "2023-11-08T04:12:35.436175+00:00"
    }
  ],
  "meta": {
    "generated_at": "",
    "scan_options": {
      "include_dev_dependencies": true,
      "ignore_severities": []
    }
  }
}